# Read `man 5 sway` for a complete reference.
bindsym XF86AudioRaiseVolume exec --no-startup-id wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+ && ~/scripts/volume.sh
bindsym XF86AudioLowerVolume exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && ~/scripts/volume.sh
bindsym XF86AudioMute exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && ~/scripts/muteaudio.sh
bindsym XF86AudioMicMute exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle && ~/scripts/mic.sh

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5% && ~/scripts/brightness.sh
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%- && ~/scripts/brightness.sh

include /etc/sway/config.d/*
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
#output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle before-sleep '/home/daniel/scripts/lock-background.sh ; gtklock -c /home/daniel/.config/gtklock/config.ini'
#exec swayidle \
#	before-sleep 'swaylock -i Descargas/keys.png -u' \
#	lock 'swaylock -i Descargas/keys.png -u'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input "1739:52780:MSFT0004:00_06CB:CE2C_Touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
    natural_scroll enable
    click_method none
}


bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
bindgesture swipe:up exec $menu
bindgesture swipe:down exec $menu
input * xkb_layout "es"

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#hotkeys
bindsym Mod4+Return exec foot
bindsym Mod4+Shift+p exec grim
bindsym Mod4+Shift+s exec "grim - | wl-copy"
bindsym Mod4+b exec firefox
bindsym Mod4+t exec "foot -e btop"
bindsym Mod4+r exec "foot -e ranger"
bindsym Mod4+v exec "foot -e nvim"
bindsym Mod4+p exec "pavucontrol"
bindsym Mod4+n exec  networkmanager_dmenu
# bindsym Mod4+Tab exec rofi -show window



# Kill focused window
bindsym $mod+q kill

# Start your launcher
set $menu rofi -show drun
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec /home/daniel/scripts/dmenu_logout.sh

bindsym $mod+Shift+u exec  /home/daniel/scripts/prompt.sh

exec wl-paste --watch cliphist store
bindsym $mod+Shift+v exec /home/daniel/scripts/cliphist-rofi

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left 40px
    bindsym $mod+Shift+Down move down 40px
    bindsym $mod+Shift+Up move up 40px
    bindsym $mod+Shift+Right move right 40px
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3 
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.


#autotiling con script
    #bindsym $mod+b splith
    #bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
    bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#


bindsym $mod+Control+Left resize shrink width 20px
bindsym $mod+Control+Down resize shrink height 20px
bindsym $mod+Control+Up resize grow height 20px
bindsym $mod+Control+Right resize grow width 20px


#borders
default_border pixel 2
default_floating_border none
title_align center

gaps inner 5px
smart_gaps on
smart_borders on

#bar
bar {
    colors {
        separator #000000
        background #000000
        statusline #ffffff
        focused_workspace #000000 #000000 #ffffff
        urgent_workspace #2f343a #900000 #ffffff
        inactive_workspace #000000 #000000 #93a1a1
    }
  font JetBrainsMono Nerd Font 11
  pango_markup enabled
  position top
  status_command i3status-rs
  workspace_buttons yes
  binding_mode_indicator no
  tray_output none
  }
}



#wall
output * bg ~/imagenes/arch.png fill

bindsym $mod+c exec code


font pango:JetBrainsMono Nerd Font 11
exec python3 /home/daniel/scripts/autotiling.py
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# class                 border  backgr. text    indicator child_border
client.focused          #93a1a1 #93a1a1 #161616 #93a1a1   #93a1a1
client.focused_inactive #333333 #5f676a #ffffff #484e50   #222222
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff



for_window [app_id="pavucontrol"] floating enable



